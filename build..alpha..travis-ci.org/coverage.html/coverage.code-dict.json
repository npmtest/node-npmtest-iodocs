{"/home/travis/build/npmtest/node-npmtest-iodocs/test.js":"/* istanbul instrument in package npmtest_iodocs */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-iodocs/lib.npmtest_iodocs.js":"/* istanbul instrument in package npmtest_iodocs */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_iodocs = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_iodocs = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-iodocs/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-iodocs && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_iodocs */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_iodocs\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_iodocs.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_iodocs.rollup.js'] =\n            local.assetsDict['/assets.npmtest_iodocs.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_iodocs.__dirname + '/lib.npmtest_iodocs.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-iodocs/node_modules/iodocs/app.js":"//\n// Copyright (c) 2011 Mashery, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// 'Software'), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n//\n// Module dependencies\n//\nvar express     = require('express'),\n    util        = require('util'),\n    fs          = require('fs'),\n    OAuth       = require('oauth').OAuth,\n    query       = require('querystring'),\n    url         = require('url'),\n    http        = require('http'),\n    https       = require('https'),\n    crypto      = require('crypto'),\n    redis       = require('redis'),\n    RedisStore  = require('connect-redis')(express);\n\n// Configuration\ntry {\n    var configJSON = fs.readFileSync(__dirname + \"/config.json\");\n    var config = JSON.parse(configJSON.toString());\n} catch(e) {\n    console.error(\"File config.json not found or is invalid.  Try: `cp config.json.sample config.json`\");\n    process.exit(1);\n}\n\n//\n// Redis connection\n//\nvar defaultDB = '0';\nvar db;\n\nif (process.env.REDISTOGO_URL) {\n    var rtg   = require(\"url\").parse(process.env.REDISTOGO_URL);\n    db = require(\"redis\").createClient(rtg.port, rtg.hostname);\n    db.auth(rtg.auth.split(\":\")[1]);\n} else {\n    db = redis.createClient(config.redis.port, config.redis.host);\n    db.auth(config.redis.password);\n}\n\ndb.on(\"error\", function(err) {\n    if (config.debug) {\n         console.log(\"Error \" + err);\n    }\n});\n\n//\n// Load API Configs\n//\nvar apisConfig;\nfs.readFile(__dirname +'/public/data/apiconfig.json', 'utf-8', function(err, data) {\n    if (err) throw err;\n    apisConfig = JSON.parse(data);\n    if (config.debug) {\n         console.log(util.inspect(apisConfig));\n    }\n});\n\nvar app = module.exports = express.createServer();\n\nif (process.env.REDISTOGO_URL) {\n    var rtg   = require(\"url\").parse(process.env.REDISTOGO_URL);\n    config.redis.host = rtg.hostname;\n    config.redis.port = rtg.port;\n    config.redis.password = rtg.auth.split(\":\")[1];\n}\n\napp.configure(function() {\n    app.set('views', __dirname + '/views');\n    app.set('view engine', 'jade');\n    app.use(express.logger());\n    app.use(express.bodyParser());\n    app.use(express.methodOverride());\n    app.use(express.cookieParser());\n    app.use(express.session({\n        secret: config.sessionSecret,\n        store:  new RedisStore({\n            'host':   config.redis.host,\n            'port':   config.redis.port,\n            'pass':   config.redis.password,\n            'maxAge': 1209600000\n        })\n    }));\n\n    app.use(app.router);\n\n    app.use(express.static(__dirname + '/public'));\n});\n\napp.configure('development', function() {\n    app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));\n});\n\napp.configure('production', function() {\n    app.use(express.errorHandler());\n});\n\n//\n// Middleware\n//\nfunction oauth(req, res, next) {\n    console.log('OAuth process started');\n    var apiName = req.body.apiName,\n        apiConfig = apisConfig[apiName];\n\n    if (apiConfig.oauth) {\n        var apiKey = req.body.apiKey || req.body.key,\n            apiSecret = req.body.apiSecret || req.body.secret,\n            refererURL = url.parse(req.headers.referer),\n            callbackURL = refererURL.protocol + '//' + refererURL.host + '/authSuccess/' + apiName,\n            oa = new OAuth(apiConfig.oauth.requestURL,\n                           apiConfig.oauth.accessURL,\n                           apiKey,\n                           apiSecret,\n                           apiConfig.oauth.version,\n                           callbackURL,\n                           apiConfig.oauth.crypt);\n\n        if (config.debug) {\n            console.log('OAuth type: ' + apiConfig.oauth.type);\n            console.log('Method security: ' + req.body.oauth);\n            console.log('Session authed: ' + req.session[apiName]);\n            console.log('apiKey: ' + apiKey);\n            console.log('apiSecret: ' + apiSecret);\n        };\n\n        // Check if the API even uses OAuth, then if the method requires oauth, then if the session is not authed\n        if (apiConfig.oauth.type == 'three-legged' && req.body.oauth == 'authrequired' && (!req.session[apiName] || !req.session[apiName].authed) ) {\n            if (config.debug) {\n                console.log('req.session: ' + util.inspect(req.session));\n                console.log('headers: ' + util.inspect(req.headers));\n\n                console.log(util.inspect(oa));\n                // console.log(util.inspect(req));\n                console.log('sessionID: ' + util.inspect(req.sessionID));\n                // console.log(util.inspect(req.sessionStore));\n            };\n\n            oa.getOAuthRequestToken(function(err, oauthToken, oauthTokenSecret, results) {\n                if (err) {\n                    res.send(\"Error getting OAuth request token : \" + util.inspect(err), 500);\n                } else {\n                    // Unique key using the sessionID and API name to store tokens and secrets\n                    var key = req.sessionID + ':' + apiName;\n\n                    db.set(key + ':apiKey', apiKey, redis.print);\n                    db.set(key + ':apiSecret', apiSecret, redis.print);\n\n                    db.set(key + ':requestToken', oauthToken, redis.print);\n                    db.set(key + ':requestTokenSecret', oauthTokenSecret, redis.print);\n\n                    // Set expiration to same as session\n                    db.expire(key + ':apiKey', 1209600000);\n                    db.expire(key + ':apiSecret', 1209600000);\n                    db.expire(key + ':requestToken', 1209600000);\n                    db.expire(key + ':requestTokenSecret', 1209600000);\n\n                    // res.header('Content-Type', 'application/json');\n                    res.send({ 'signin': apiConfig.oauth.signinURL + oauthToken });\n                }\n            });\n        } else if (apiConfig.oauth.type == 'two-legged' && req.body.oauth == 'authrequired') {\n            // Two legged stuff... for now nothing.\n            next();\n        } else {\n            next();\n        }\n    } else {\n        next();\n    }\n\n}\n\n//\n// OAuth Success!\n//\nfunction oauthSuccess(req, res, next) {\n    var oauthRequestToken,\n        oauthRequestTokenSecret,\n        apiKey,\n        apiSecret,\n        apiName = req.params.api,\n        apiConfig = apisConfig[apiName],\n        key = req.sessionID + ':' + apiName; // Unique key using the sessionID and API name to store tokens and secrets\n\n    if (config.debug) {\n        console.log('apiName: ' + apiName);\n        console.log('key: ' + key);\n        console.log(util.inspect(req.params));\n    };\n\n    db.mget([\n        key + ':requestToken',\n        key + ':requestTokenSecret',\n        key + ':apiKey',\n        key + ':apiSecret'\n    ], function(err, result) {\n        if (err) {\n            console.log(util.inspect(err));\n        }\n        oauthRequestToken = result[0],\n        oauthRequestTokenSecret = result[1],\n        apiKey = result[2],\n        apiSecret = result[3];\n\n        if (config.debug) {\n            console.log(util.inspect(\">>\"+oauthRequestToken));\n            console.log(util.inspect(\">>\"+oauthRequestTokenSecret));\n            console.log(util.inspect(\">>\"+req.query.oauth_verifier));\n        };\n\n        var oa = new OAuth(apiConfig.oauth.requestURL,\n                           apiConfig.oauth.accessURL,\n                           apiKey,\n                           apiSecret,\n                           apiConfig.oauth.version,\n                           null,\n                           apiConfig.oauth.crypt);\n\n        if (config.debug) {\n            console.log(util.inspect(oa));\n        };\n\n        oa.getOAuthAccessToken(oauthRequestToken, oauthRequestTokenSecret, req.query.oauth_verifier, function(error, oauthAccessToken, oauthAccessTokenSecret, results) {\n            if (error) {\n                res.send(\"Error getting OAuth access token : \" + util.inspect(error) + \"[\"+oauthAccessToken+\"]\"+ \"[\"+oauthAccessTokenSecret+\"]\"+ \"[\"+util.inspect(results)+\"]\", 500);\n            } else {\n                if (config.debug) {\n                    console.log('results: ' + util.inspect(results));\n                };\n                db.mset([key + ':accessToken', oauthAccessToken,\n                    key + ':accessTokenSecret', oauthAccessTokenSecret\n                ], function(err, results2) {\n                    req.session[apiName] = {};\n                    req.session[apiName].authed = true;\n                    if (config.debug) {\n                        console.log('session[apiName].authed: ' + util.inspect(req.session));\n                    };\n\n                    next();\n                });\n            }\n        });\n\n    });\n}\n\n//\n// processRequest - handles API call\n//\nfunction processRequest(req, res, next) {\n    if (config.debug) {\n        console.log(util.inspect(req.body, null, 3));\n    };\n\n    var reqQuery = req.body,\n        params = reqQuery.params || {},\n        methodURL = reqQuery.methodUri,\n        httpMethod = reqQuery.httpMethod,\n        apiKey = reqQuery.apiKey,\n        apiSecret = reqQuery.apiSecret,\n        apiName = reqQuery.apiName\n        apiConfig = apisConfig[apiName],\n        key = req.sessionID + ':' + apiName;\n\n    // Replace placeholders in the methodURL with matching params\n    for (var param in params) {\n        if (params.hasOwnProperty(param)) {\n            if (params[param] !== '') {\n                // URL params are prepended with \":\"\n                var regx = new RegExp(':' + param);\n\n                // If the param is actually a part of the URL, put it in the URL and remove the param\n                if (!!regx.test(methodURL)) {\n                    methodURL = methodURL.replace(regx, params[param]);\n                    delete params[param]\n                }\n            } else {\n                delete params[param]; // Delete blank params\n            }\n        }\n    }\n\n    var baseHostInfo = apiConfig.baseURL.split(':');\n    var baseHostUrl = baseHostInfo[0],\n        baseHostPort = (baseHostInfo.length > 1) ? baseHostInfo[1] : \"\";\n\n    var paramString = query.stringify(params),\n        privateReqURL = apiConfig.protocol + '://' + apiConfig.baseURL + apiConfig.privatePath + methodURL + ((paramString.length > 0) ? '?' + paramString : \"\"),\n        options = {\n            headers: apiConfig.headers,\n            protocol: apiConfig.protocol + ':',\n            host: baseHostUrl,\n            port: baseHostPort,\n            method: httpMethod,\n            path: apiConfig.publicPath + methodURL// + ((paramString.length > 0) ? '?' + paramString : \"\")\n        };\n\n    if (['POST','DELETE','PUT'].indexOf(httpMethod) !== -1) {\n        var requestBody = query.stringify(params);\n    }\n\n    if (apiConfig.oauth) {\n        console.log('Using OAuth');\n\n        // Three legged OAuth\n        if (apiConfig.oauth.type == 'three-legged' && (reqQuery.oauth == 'authrequired' || (req.session[apiName] && req.session[apiName].authed))) {\n            if (config.debug) {\n                console.log('Three Legged OAuth');\n            };\n\n            db.mget([key + ':apiKey',\n                     key + ':apiSecret',\n                     key + ':accessToken',\n                     key + ':accessTokenSecret'\n                ],\n                function(err, results) {\n\n                    var apiKey = (typeof reqQuery.apiKey == \"undefined\" || reqQuery.apiKey == \"undefined\")?results[0]:reqQuery.apiKey,\n                        apiSecret = (typeof reqQuery.apiSecret == \"undefined\" || reqQuery.apiSecret == \"undefined\")?results[1]:reqQuery.apiSecret,\n                        accessToken = results[2],\n                        accessTokenSecret = results[3];\n                    console.log(apiKey);\n                    console.log(apiSecret);\n                    console.log(accessToken);\n                    console.log(accessTokenSecret);\n                    \n                    var oa = new OAuth(apiConfig.oauth.requestURL || null,\n                                       apiConfig.oauth.accessURL || null,\n                                       apiKey || null,\n                                       apiSecret || null,\n                                       apiConfig.oauth.version || null,\n                                       null,\n                                       apiConfig.oauth.crypt);\n\n                    if (config.debug) {\n                        console.log('Access token: ' + accessToken);\n                        console.log('Access token secret: ' + accessTokenSecret);\n                        console.log('key: ' + key);\n                    };\n\n                    oa.getProtectedResource(privateReqURL, httpMethod, accessToken, accessTokenSecret,  function (error, data, response) {\n                        req.call = privateReqURL;\n\n                        // console.log(util.inspect(response));\n                        if (error) {\n                            console.log('Got error: ' + util.inspect(error));\n\n                            if (error.data == 'Server Error' || error.data == '') {\n                                req.result = 'Server Error';\n                            } else {\n                                req.result = error.data;\n                            }\n\n                            res.statusCode = error.statusCode\n\n                            next();\n                        } else {\n                            req.resultHeaders = response.headers;\n                            req.result = JSON.parse(data);\n\n                            next();\n                        }\n                    });\n                }\n            );\n        } else if (apiConfig.oauth.type == 'two-legged' && reqQuery.oauth == 'authrequired') { // Two-legged\n            if (config.debug) {\n                console.log('Two Legged OAuth');\n            };\n\n            var body,\n                oa = new OAuth(null,\n                               null,\n                               apiKey || null,\n                               apiSecret || null,\n                               apiConfig.oauth.version || null,\n                               null,\n                               apiConfig.oauth.crypt);\n\n            var resource = options.protocol + '://' + options.host + options.path,\n                cb = function(error, data, response) {\n                    if (error) {\n                        if (error.data == 'Server Error' || error.data == '') {\n                            req.result = 'Server Error';\n                        } else {\n                            console.log(util.inspect(error));\n                            body = error.data;\n                        }\n\n                        res.statusCode = error.statusCode;\n\n                    } else {\n                        console.log(util.inspect(data));\n\n                        var responseContentType = response.headers['content-type'];\n\n                        switch (true) {\n                            case /application\\/javascript/.test(responseContentType):\n                            case /text\\/javascript/.test(responseContentType):\n                            case /application\\/json/.test(responseContentType):\n                                body = JSON.parse(data);\n                                break;\n                            case /application\\/xml/.test(responseContentType):\n                            case /text\\/xml/.test(responseContentType):\n                            default:\n                        }\n                    }\n\n                    // Set Headers and Call\n                    if (response) {\n                        req.resultHeaders = response.headers || 'None';\n                    } else {\n                        req.resultHeaders = req.resultHeaders || 'None';\n                    }\n\n                    req.call = url.parse(options.host + options.path);\n                    req.call = url.format(req.call);\n\n                    // Response body\n                    req.result = body;\n\n                    next();\n                };\n\n            switch (httpMethod) {\n                case 'GET':\n                    console.log(resource);\n                    oa.get(resource, '', '',cb);\n                    break;\n                case 'PUT':\n                case 'POST':\n                    oa.post(resource, '', '', JSON.stringify(obj), null, cb);\n                    break;\n                case 'DELETE':\n                    oa.delete(resource,'','',cb);\n                    break;\n            }\n\n        } else {\n            // API uses OAuth, but this call doesn't require auth and the user isn't already authed, so just call it.\n            unsecuredCall();\n        }\n    } else {\n        // API does not use authentication\n        unsecuredCall();\n    }\n\n    // Unsecured API Call helper\n    function unsecuredCall() {\n        console.log('Unsecured Call');\n\n        if (['POST','PUT','DELETE'].indexOf(httpMethod) === -1) {\n            options.path += ((paramString.length > 0) ? '?' + paramString : \"\");\n        }\n\n        // Add API Key to params, if any.\n        if (apiKey != '' && apiKey != 'undefined' && apiKey != undefined) {\n            if (options.path.indexOf('?') !== -1) {\n                options.path += '&';\n            }\n            else {\n                options.path += '?';\n            }\n            options.path += apiConfig.keyParam + '=' + apiKey;\n        }\n\n        // Perform signature routine, if any.\n        if (apiConfig.signature) {\n            if (apiConfig.signature.type == 'signed_md5') {\n                // Add signature parameter\n                var timeStamp = Math.round(new Date().getTime()/1000);\n                var sig = crypto.createHash('md5').update('' + apiKey + apiSecret + timeStamp + '').digest(apiConfig.signature.digest);\n                options.path += '&' + apiConfig.signature.sigParam + '=' + sig;\n            }\n            else if (apiConfig.signature.type == 'signed_sha256') { // sha256(key+secret+epoch)\n                // Add signature parameter\n                var timeStamp = Math.round(new Date().getTime()/1000);\n                var sig = crypto.createHash('sha256').update('' + apiKey + apiSecret + timeStamp + '').digest(apiConfig.signature.digest);\n                options.path += '&' + apiConfig.signature.sigParam + '=' + sig;\n            }\n        }\n\n        // Setup headers, if any\n        if (reqQuery.headerNames && reqQuery.headerNames.length > 0) {\n            if (config.debug) {\n                console.log('Setting headers');\n            };\n            var headers = {};\n\n            for (var x = 0, len = reqQuery.headerNames.length; x < len; x++) {\n                if (config.debug) {\n                  console.log('Setting header: ' + reqQuery.headerNames[x] + ':' + reqQuery.headerValues[x]);\n                };\n                if (reqQuery.headerNames[x] != '') {\n                    headers[reqQuery.headerNames[x]] = reqQuery.headerValues[x];\n                }\n            }\n\n            options.headers = headers;\n        }\n        if(options.headers === void 0){\n            options.headers = {}\n        }\n        if (!options.headers['Content-Length']) {\n            if (requestBody) {\n                options.headers['Content-Length'] = requestBody.length;\n            }\n            else {\n                options.headers['Content-Length'] = 0;\n            }\n        }\n\n        if (!options.headers['Content-Type'] && requestBody) {\n            options.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n        }\n\n        if (config.debug) {\n            console.log(util.inspect(options));\n        };\n\n        var doRequest;\n        if (options.protocol === 'https' || options.protocol === 'https:') {\n            console.log('Protocol: HTTPS');\n            options.protocol = 'https:'\n            doRequest = https.request;\n        } else {\n            console.log('Protocol: HTTP');\n            doRequest = http.request;\n        }\n\n        // API Call. response is the response from the API, res is the response we will send back to the user.\n        var apiCall = doRequest(options, function(response) {\n            response.setEncoding('utf-8');\n\n            if (config.debug) {\n                console.log('HEADERS: ' + JSON.stringify(response.headers));\n                console.log('STATUS CODE: ' + response.statusCode);\n            };\n\n            res.statusCode = response.statusCode;\n\n            var body = '';\n\n            response.on('data', function(data) {\n                body += data;\n            })\n\n            response.on('end', function() {\n                delete options.agent;\n\n                var responseContentType = response.headers['content-type'];\n\n                switch (true) {\n                    case /application\\/javascript/.test(responseContentType):\n                    case /application\\/json/.test(responseContentType):\n                        console.log(util.inspect(body));\n                        // body = JSON.parse(body);\n                        break;\n                    case /application\\/xml/.test(responseContentType):\n                    case /text\\/xml/.test(responseContentType):\n                    default:\n                }\n\n                // Set Headers and Call\n                req.resultHeaders = response.headers;\n                req.call = url.parse(options.host + options.path);\n                req.call = url.format(req.call);\n\n                // Response body\n                req.result = body;\n\n                console.log(util.inspect(body));\n\n                next();\n            })\n        }).on('error', function(e) {\n            if (config.debug) {\n                console.log('HEADERS: ' + JSON.stringify(res.headers));\n                console.log(\"Got error: \" + e.message);\n                console.log(\"Error: \" + util.inspect(e));\n            };\n        });\n\n        if (requestBody) {\n            apiCall.end(requestBody, 'utf-8');\n        }\n        else {\n            apiCall.end();\n        }\n    }\n}\n\n\n// Dynamic Helpers\n// Passes variables to the view\napp.dynamicHelpers({\n    session: function(req, res) {\n    // If api wasn't passed in as a parameter, check the path to see if it's there\n        if (!req.params.api) {\n            pathName = req.url.replace('/','');\n            // Is it a valid API - if there's a config file we can assume so\n            fs.stat(__dirname + '/public/data/' + pathName + '.json', function (error, stats) {\n                if (stats) {\n                    req.params.api = pathName;\n                }\n            });\n        }       \n        // If the cookie says we're authed for this particular API, set the session to authed as well\n        if (req.params.api && req.session[req.params.api] && req.session[req.params.api]['authed']) {\n            req.session['authed'] = true;\n        }\n\n        return req.session;\n    },\n    apiInfo: function(req, res) {\n        if (req.params.api) {\n            return apisConfig[req.params.api];\n        } else {\n            return apisConfig;\n        }\n    },\n    apiName: function(req, res) {\n        if (req.params.api) {\n            return req.params.api;\n        }\n    },\n    apiDefinition: function(req, res) {\n        if (req.params.api) {\n            var data = fs.readFileSync(__dirname + '/public/data/' + req.params.api + '.json');\n            return JSON.parse(data);\n        }\n    }\n})\n\n\n//\n// Routes\n//\napp.get('/', function(req, res) {\n    res.render('listAPIs', {\n        title: config.title\n    });\n});\n\n// Process the API request\napp.post('/processReq', oauth, processRequest, function(req, res) {\n    var result = {\n        headers: req.resultHeaders,\n        response: req.result,\n        call: req.call,\n        code: req.res.statusCode\n    };\n\n    res.send(result);\n});\n\n// Just auth\napp.all('/auth', oauth);\n\n// OAuth callback page, closes the window immediately after storing access token/secret\napp.get('/authSuccess/:api', oauthSuccess, function(req, res) {\n    res.render('authSuccess', {\n        title: 'OAuth Successful'\n    });\n});\n\napp.post('/upload', function(req, res) {\n  console.log(req.body.user);\n  res.redirect('back');\n});\n\n// API shortname, all lowercase\napp.get('/:api([^\\.]+)', function(req, res) {\n    req.params.api=req.params.api.replace(/\\/$/,'');\n    res.render('api');\n});\n\n// Only listen on $ node app.js\n\nif (!module.parent) {\n    var port = process.env.PORT || config.port;\n    app.listen(port);\n    console.log(\"Express server listening on port %d\", app.address().port);\n}\n","/home/travis/build/npmtest/node-npmtest-iodocs/node_modules/iodocs/public/javascripts/json2.js":"/*\n    http://www.JSON.org/json2.js\n    2011-02-23\n\n    Public Domain.\n\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n\n    See http://www.JSON.org/js.html\n\n\n    This code should be minified before deployment.\n    See http://javascript.crockford.com/jsmin.html\n\n    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n    NOT CONTROL.\n\n\n    This file creates a global JSON object containing two methods: stringify\n    and parse.\n\n        JSON.stringify(value, replacer, space)\n            value       any JavaScript value, usually an object or array.\n\n            replacer    an optional parameter that determines how object\n                        values are stringified for objects. It can be a\n                        function or an array of strings.\n\n            space       an optional parameter that specifies the indentation\n                        of nested structures. If it is omitted, the text will\n                        be packed without extra whitespace. If it is a number,\n                        it will specify the number of spaces to indent at each\n                        level. If it is a string (such as '\\t' or '&nbsp;'),\n                        it contains the characters used to indent at each level.\n\n            This method produces a JSON text from a JavaScript value.\n\n            When an object value is found, if the object contains a toJSON\n            method, its toJSON method will be called and the result will be\n            stringified. A toJSON method does not serialize: it returns the\n            value represented by the name/value pair that should be serialized,\n            or undefined if nothing should be serialized. The toJSON method\n            will be passed the key associated with the value, and this will be\n            bound to the value\n\n            For example, this would serialize Dates as ISO strings.\n\n                Date.prototype.toJSON = function (key) {\n                    function f(n) {\n                        // Format integers to have at least two digits.\n                        return n < 10 ? '0' + n : n;\n                    }\n\n                    return this.getUTCFullYear()   + '-' +\n                         f(this.getUTCMonth() + 1) + '-' +\n                         f(this.getUTCDate())      + 'T' +\n                         f(this.getUTCHours())     + ':' +\n                         f(this.getUTCMinutes())   + ':' +\n                         f(this.getUTCSeconds())   + 'Z';\n                };\n\n            You can provide an optional replacer method. It will be passed the\n            key and value of each member, with this bound to the containing\n            object. The value that is returned from your method will be\n            serialized. If your method returns undefined, then the member will\n            be excluded from the serialization.\n\n            If the replacer parameter is an array of strings, then it will be\n            used to select the members to be serialized. It filters the results\n            such that only members with keys listed in the replacer array are\n            stringified.\n\n            Values that do not have JSON representations, such as undefined or\n            functions, will not be serialized. Such values in objects will be\n            dropped; in arrays they will be replaced with null. You can use\n            a replacer function to replace those with JSON values.\n            JSON.stringify(undefined) returns undefined.\n\n            The optional space parameter produces a stringification of the\n            value that is filled with line breaks and indentation to make it\n            easier to read.\n\n            If the space parameter is a non-empty string, then that string will\n            be used for indentation. If the space parameter is a number, then\n            the indentation will be that many spaces.\n\n            Example:\n\n            text = JSON.stringify(['e', {pluribus: 'unum'}]);\n            // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n\n\n            text = JSON.stringify(['e', {pluribus: 'unum'}], null, '\\t');\n            // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n\n            text = JSON.stringify([new Date()], function (key, value) {\n                return this[key] instanceof Date ?\n                    'Date(' + this[key] + ')' : value;\n            });\n            // text is '[\"Date(---current time---)\"]'\n\n\n        JSON.parse(text, reviver)\n            This method parses a JSON text to produce an object or array.\n            It can throw a SyntaxError exception.\n\n            The optional reviver parameter is a function that can filter and\n            transform the results. It receives each of the keys and values,\n            and its return value is used instead of the original value.\n            If it returns what it received, then the structure is not modified.\n            If it returns undefined then the member is deleted.\n\n            Example:\n\n            // Parse the text. Values that look like ISO date strings will\n            // be converted to Date objects.\n\n            myData = JSON.parse(text, function (key, value) {\n                var a;\n                if (typeof value === 'string') {\n                    a =\n/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n                    if (a) {\n                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n                            +a[5], +a[6]));\n                    }\n                }\n                return value;\n            });\n\n            myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n                var d;\n                if (typeof value === 'string' &&\n                        value.slice(0, 5) === 'Date(' &&\n                        value.slice(-1) === ')') {\n                    d = new Date(value.slice(5, -1));\n                    if (d) {\n                        return d;\n                    }\n                }\n                return value;\n            });\n\n\n    This is a reference implementation. You are free to copy, modify, or\n    redistribute.\n*/\n\n/*jslint evil: true, strict: false, regexp: false */\n\n/*members \"\", \"\\b\", \"\\t\", \"\\n\", \"\\f\", \"\\r\", \"\\\"\", JSON, \"\\\\\", apply,\n    call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n    lastIndex, length, parse, prototype, push, replace, slice, stringify,\n    test, toJSON, toString, valueOf\n*/\n\n\n// Create a JSON object only if one does not already exist. We create the\n// methods in a closure to avoid creating global variables.\n\nvar JSON;\nif (!JSON) {\n    JSON = {};\n}\n\n(function () {\n    \"use strict\";\n\n    function f(n) {\n        // Format integers to have at least two digits.\n        return n < 10 ? '0' + n : n;\n    }\n\n    if (typeof Date.prototype.toJSON !== 'function') {\n\n        Date.prototype.toJSON = function (key) {\n\n            return isFinite(this.valueOf()) ?\n                this.getUTCFullYear()     + '-' +\n                f(this.getUTCMonth() + 1) + '-' +\n                f(this.getUTCDate())      + 'T' +\n                f(this.getUTCHours())     + ':' +\n                f(this.getUTCMinutes())   + ':' +\n                f(this.getUTCSeconds())   + 'Z' : null;\n        };\n\n        String.prototype.toJSON      =\n            Number.prototype.toJSON  =\n            Boolean.prototype.toJSON = function (key) {\n                return this.valueOf();\n            };\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        },\n        rep;\n\n\n    function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n        escapable.lastIndex = 0;\n        return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n            var c = meta[a];\n            return typeof c === 'string' ? c :\n                '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n        }) + '\"' : '\"' + string + '\"';\n    }\n\n\n    function str(key, holder) {\n\n// Produce a string from holder[key].\n\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            mind = gap,\n            partial,\n            value = holder[key];\n\n// If the value has a toJSON method, call it to obtain a replacement value.\n\n        if (value && typeof value === 'object' &&\n                typeof value.toJSON === 'function') {\n            value = value.toJSON(key);\n        }\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n        if (typeof rep === 'function') {\n            value = rep.call(holder, key, value);\n        }\n\n// What happens next depends on the value's type.\n\n        switch (typeof value) {\n        case 'string':\n            return quote(value);\n\n        case 'number':\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n            return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce 'null'. The case is included here in\n// the remote chance that this gets fixed someday.\n\n            return String(value);\n\n// If the type is 'object', we might be dealing with an object or an array or\n// null.\n\n        case 'object':\n\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\n// so watch out for that case.\n\n            if (!value) {\n                return 'null';\n            }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n            gap += indent;\n            partial = [];\n\n// Is the value an array?\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    if (typeof rep[i] === 'string') {\n                        k = rep[i];\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            } else {\n\n// Otherwise, iterate through all of the keys in the object.\n\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n            v = partial.length === 0 ? '{}' : gap ?\n                '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n                '{' + partial.join(',') + '}';\n            gap = mind;\n            return v;\n        }\n    }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n    if (typeof JSON.stringify !== 'function') {\n        JSON.stringify = function (value, replacer, space) {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n            var i;\n            gap = '';\n            indent = '';\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n            if (typeof space === 'number') {\n                for (i = 0; i < space; i += 1) {\n                    indent += ' ';\n                }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n            } else if (typeof space === 'string') {\n                indent = space;\n            }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n            rep = replacer;\n            if (replacer && typeof replacer !== 'function' &&\n                    (typeof replacer !== 'object' ||\n                    typeof replacer.length !== 'number')) {\n                throw new Error('JSON.stringify');\n            }\n\n// Make a fake root object containing our value under the key of ''.\n// Return the result of stringifying the value.\n\n            return str('', {'': value});\n        };\n    }\n\n\n// If the JSON object does not yet have a parse method, give it one.\n\n    if (typeof JSON.parse !== 'function') {\n        JSON.parse = function (text, reviver) {\n\n// The parse method takes a text and an optional reviver function, and returns\n// a JavaScript value if the text is a valid JSON text.\n\n            var j;\n\n            function walk(holder, key) {\n\n// The walk method is used to recursively walk the resulting structure so\n// that modifications can be made.\n\n                var k, v, value = holder[key];\n                if (value && typeof value === 'object') {\n                    for (k in value) {\n                        if (Object.prototype.hasOwnProperty.call(value, k)) {\n                            v = walk(value, k);\n                            if (v !== undefined) {\n                                value[k] = v;\n                            } else {\n                                delete value[k];\n                            }\n                        }\n                    }\n                }\n                return reviver.call(holder, key, value);\n            }\n\n\n// Parsing happens in four stages. In the first stage, we replace certain\n// Unicode characters with escape sequences. JavaScript handles many characters\n// incorrectly, either silently deleting them, or treating them as line endings.\n\n            text = String(text);\n            cx.lastIndex = 0;\n            if (cx.test(text)) {\n                text = text.replace(cx, function (a) {\n                    return '\\\\u' +\n                        ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n                });\n            }\n\n// In the second stage, we run the text against regular expressions that look\n// for non-JSON patterns. We are especially concerned with '()' and 'new'\n// because they can cause invocation, and '=' because it can cause mutation.\n// But just to be safe, we want to reject all unexpected forms.\n\n// We split the second stage into 4 regexp operations in order to work around\n// crippling inefficiencies in IE's and Safari's regexp engines. First we\n// replace the JSON backslash pairs with '@' (a non-JSON character). Second, we\n// replace all simple value tokens with ']' characters. Third, we delete all\n// open brackets that follow a colon or comma or that begin the text. Finally,\n// we look to see that the remaining characters are only whitespace or ']' or\n// ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n\n            if (/^[\\],:{}\\s]*$/\n                    .test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')\n                        .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']')\n                        .replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\n\n// In the third stage we use the eval function to compile the text into a\n// JavaScript structure. The '{' operator is subject to a syntactic ambiguity\n// in JavaScript: it can begin a block or an object literal. We wrap the text\n// in parens to eliminate the ambiguity.\n\n                j = eval('(' + text + ')');\n\n// In the optional fourth stage, we recursively walk the new structure, passing\n// each name/value pair to a reviver function for possible transformation.\n\n                return typeof reviver === 'function' ?\n                    walk({'': j}, '') : j;\n            }\n\n// If the text is not JSON parseable, then a SyntaxError is thrown.\n\n            throw new SyntaxError('JSON.parse');\n        };\n    }\n}());","/home/travis/build/npmtest/node-npmtest-iodocs/node_modules/iodocs/public/javascripts/livedocs.js":"var livedocs = (function() {\n\n    ld = {};\n\n    /**\n     * Convert ugly data into pretty data based on the content-type.\n     * @param {string} data The data, presumably of a certain content-type (JSON/XML/HTML)\n     * @param {String} contentType The content type of the data\n     */\n    ld.formatData = function(data, contentType) {\n        if (!contentType || typeof contentType != 'string') {\n            return data;\n        }\n\n        switch (true) {\n            case /application\\/javascript/.test(contentType):\n            case /application\\/json/.test(contentType):\n                // If result is JSON in string format, objectify it so we can format it.\n                if (typeof data == 'string') {\n                    try {\n                        data = JSON.parse(data);\n                    } catch(e) {\n                        console.log('Response said it was JSON, but it\\'s not. :(');\n                    }\n                }\n\n                data = formatJSON(data);\n\n                break;\n            case /application\\/xml/.test(contentType):\n            case /text\\/xml/.test(contentType):\n            case /html/.test(contentType):\n                data = formatXML(data);\n\n                break;\n        }\n\n        return data;\n    }\n\n    /**\n     * Handle OAuth success callback\n     */\n    ld.authSuccess = function(msg) {\n        // window.location.reload();\n        // console.log('Success!');\n        var credentials = $('section.credentials');\n\n        $('h2', credentials).remove();\n        $('img', credentials).remove();\n\n        credentials\n            .addClass('authed')\n            .append($(document.createElement('span')).text(msg))\n            .append($(document.createElement('img')).attr('src', '/images/accept.png'));\n    }\n\n    return ld;\n}(livedocs || {}));","/home/travis/build/npmtest/node-npmtest-iodocs/node_modules/iodocs/public/javascripts/prettify.js":"window.PR_SHOULD_USE_CONTINUATION=true;window.PR_TAB_WIDTH=8;window.PR_normalizedHtml=window.PR=window.prettyPrintOne=window.prettyPrint=void 0;window._pr_isIE6=function(){var y=navigator&&navigator.userAgent&&navigator.userAgent.match(/\\bMSIE ([678])\\./);y=y?+y[1]:false;window._pr_isIE6=function(){return y};return y};\n(function(){function y(b){return b.replace(L,\"&amp;\").replace(M,\"&lt;\").replace(N,\"&gt;\")}function H(b,f,i){switch(b.nodeType){case 1:var o=b.tagName.toLowerCase();f.push(\"<\",o);var l=b.attributes,n=l.length;if(n){if(i){for(var r=[],j=n;--j>=0;)r[j]=l[j];r.sort(function(q,m){return q.name<m.name?-1:q.name===m.name?0:1});l=r}for(j=0;j<n;++j){r=l[j];r.specified&&f.push(\" \",r.name.toLowerCase(),'=\"',r.value.replace(L,\"&amp;\").replace(M,\"&lt;\").replace(N,\"&gt;\").replace(X,\"&quot;\"),'\"')}}f.push(\">\");\nfor(l=b.firstChild;l;l=l.nextSibling)H(l,f,i);if(b.firstChild||!/^(?:br|link|img)$/.test(o))f.push(\"</\",o,\">\");break;case 3:case 4:f.push(y(b.nodeValue));break}}function O(b){function f(c){if(c.charAt(0)!==\"\\\\\")return c.charCodeAt(0);switch(c.charAt(1)){case \"b\":return 8;case \"t\":return 9;case \"n\":return 10;case \"v\":return 11;case \"f\":return 12;case \"r\":return 13;case \"u\":case \"x\":return parseInt(c.substring(2),16)||c.charCodeAt(1);case \"0\":case \"1\":case \"2\":case \"3\":case \"4\":case \"5\":case \"6\":case \"7\":return parseInt(c.substring(1),\n8);default:return c.charCodeAt(1)}}function i(c){if(c<32)return(c<16?\"\\\\x0\":\"\\\\x\")+c.toString(16);c=String.fromCharCode(c);if(c===\"\\\\\"||c===\"-\"||c===\"[\"||c===\"]\")c=\"\\\\\"+c;return c}function o(c){var d=c.substring(1,c.length-1).match(RegExp(\"\\\\\\\\u[0-9A-Fa-f]{4}|\\\\\\\\x[0-9A-Fa-f]{2}|\\\\\\\\[0-3][0-7]{0,2}|\\\\\\\\[0-7]{1,2}|\\\\\\\\[\\\\s\\\\S]|-|[^-\\\\\\\\]\",\"g\"));c=[];for(var a=[],k=d[0]===\"^\",e=k?1:0,h=d.length;e<h;++e){var g=d[e];switch(g){case \"\\\\B\":case \"\\\\b\":case \"\\\\D\":case \"\\\\d\":case \"\\\\S\":case \"\\\\s\":case \"\\\\W\":case \"\\\\w\":c.push(g);\ncontinue}g=f(g);var s;if(e+2<h&&\"-\"===d[e+1]){s=f(d[e+2]);e+=2}else s=g;a.push([g,s]);if(!(s<65||g>122)){s<65||g>90||a.push([Math.max(65,g)|32,Math.min(s,90)|32]);s<97||g>122||a.push([Math.max(97,g)&-33,Math.min(s,122)&-33])}}a.sort(function(v,w){return v[0]-w[0]||w[1]-v[1]});d=[];g=[NaN,NaN];for(e=0;e<a.length;++e){h=a[e];if(h[0]<=g[1]+1)g[1]=Math.max(g[1],h[1]);else d.push(g=h)}a=[\"[\"];k&&a.push(\"^\");a.push.apply(a,c);for(e=0;e<d.length;++e){h=d[e];a.push(i(h[0]));if(h[1]>h[0]){h[1]+1>h[0]&&a.push(\"-\");\na.push(i(h[1]))}}a.push(\"]\");return a.join(\"\")}function l(c){for(var d=c.source.match(RegExp(\"(?:\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]|\\\\\\\\u[A-Fa-f0-9]{4}|\\\\\\\\x[A-Fa-f0-9]{2}|\\\\\\\\[0-9]+|\\\\\\\\[^ux0-9]|\\\\(\\\\?[:!=]|[\\\\(\\\\)\\\\^]|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+)\",\"g\")),a=d.length,k=[],e=0,h=0;e<a;++e){var g=d[e];if(g===\"(\")++h;else if(\"\\\\\"===g.charAt(0))if((g=+g.substring(1))&&g<=h)k[g]=-1}for(e=1;e<k.length;++e)if(-1===k[e])k[e]=++n;for(h=e=0;e<a;++e){g=d[e];if(g===\"(\"){++h;if(k[h]===undefined)d[e]=\"(?:\"}else if(\"\\\\\"===\ng.charAt(0))if((g=+g.substring(1))&&g<=h)d[e]=\"\\\\\"+k[h]}for(h=e=0;e<a;++e)if(\"^\"===d[e]&&\"^\"!==d[e+1])d[e]=\"\";if(c.ignoreCase&&r)for(e=0;e<a;++e){g=d[e];c=g.charAt(0);if(g.length>=2&&c===\"[\")d[e]=o(g);else if(c!==\"\\\\\")d[e]=g.replace(/[a-zA-Z]/g,function(s){s=s.charCodeAt(0);return\"[\"+String.fromCharCode(s&-33,s|32)+\"]\"})}return d.join(\"\")}for(var n=0,r=false,j=false,q=0,m=b.length;q<m;++q){var t=b[q];if(t.ignoreCase)j=true;else if(/[a-z]/i.test(t.source.replace(/\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi,\n\"\"))){r=true;j=false;break}}var p=[];q=0;for(m=b.length;q<m;++q){t=b[q];if(t.global||t.multiline)throw Error(\"\"+t);p.push(\"(?:\"+l(t)+\")\")}return RegExp(p.join(\"|\"),j?\"gi\":\"g\")}function Y(b){var f=0;return function(i){for(var o=null,l=0,n=0,r=i.length;n<r;++n)switch(i.charAt(n)){case \"\\t\":o||(o=[]);o.push(i.substring(l,n));l=b-f%b;for(f+=l;l>=0;l-=16)o.push(\"                \".substring(0,l));l=n+1;break;case \"\\n\":f=0;break;default:++f}if(!o)return i;o.push(i.substring(l));return o.join(\"\")}}function I(b,\nf,i,o){if(f){b={source:f,c:b};i(b);o.push.apply(o,b.d)}}function B(b,f){var i={},o;(function(){for(var r=b.concat(f),j=[],q={},m=0,t=r.length;m<t;++m){var p=r[m],c=p[3];if(c)for(var d=c.length;--d>=0;)i[c.charAt(d)]=p;p=p[1];c=\"\"+p;if(!q.hasOwnProperty(c)){j.push(p);q[c]=null}}j.push(/[\\0-\\uffff]/);o=O(j)})();var l=f.length;function n(r){for(var j=r.c,q=[j,z],m=0,t=r.source.match(o)||[],p={},c=0,d=t.length;c<d;++c){var a=t[c],k=p[a],e=void 0,h;if(typeof k===\"string\")h=false;else{var g=i[a.charAt(0)];\nif(g){e=a.match(g[1]);k=g[0]}else{for(h=0;h<l;++h){g=f[h];if(e=a.match(g[1])){k=g[0];break}}e||(k=z)}if((h=k.length>=5&&\"lang-\"===k.substring(0,5))&&!(e&&typeof e[1]===\"string\")){h=false;k=P}h||(p[a]=k)}g=m;m+=a.length;if(h){h=e[1];var s=a.indexOf(h),v=s+h.length;if(e[2]){v=a.length-e[2].length;s=v-h.length}k=k.substring(5);I(j+g,a.substring(0,s),n,q);I(j+g+s,h,Q(k,h),q);I(j+g+v,a.substring(v),n,q)}else q.push(j+g,k)}r.d=q}return n}function x(b){var f=[],i=[];if(b.tripleQuotedStrings)f.push([A,/^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,\nnull,\"'\\\"\"]);else b.multiLineStrings?f.push([A,/^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,null,\"'\\\"`\"]):f.push([A,/^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,null,\"\\\"'\"]);b.verbatimStrings&&i.push([A,/^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/,null]);if(b.hashComments)if(b.cStyleComments){f.push([C,/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,null,\"#\"]);i.push([A,/^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,\nnull])}else f.push([C,/^#[^\\r\\n]*/,null,\"#\"]);if(b.cStyleComments){i.push([C,/^\\/\\/[^\\r\\n]*/,null]);i.push([C,/^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,null])}b.regexLiterals&&i.push([\"lang-regex\",RegExp(\"^\"+Z+\"(/(?=[^/*])(?:[^/\\\\x5B\\\\x5C]|\\\\x5C[\\\\s\\\\S]|\\\\x5B(?:[^\\\\x5C\\\\x5D]|\\\\x5C[\\\\s\\\\S])*(?:\\\\x5D|$))+/)\")]);b=b.keywords.replace(/^\\s+|\\s+$/g,\"\");b.length&&i.push([R,RegExp(\"^(?:\"+b.replace(/\\s+/g,\"|\")+\")\\\\b\"),null]);f.push([z,/^\\s+/,null,\" \\r\\n\\t\\u00a0\"]);i.push([J,/^@[a-z_$][a-z_$@0-9]*/i,null],[S,/^@?[A-Z]+[a-z][A-Za-z_$@0-9]*/,\nnull],[z,/^[a-z_$][a-z_$@0-9]*/i,null],[J,/^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*/i,null,\"0123456789\"],[E,/^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/,null]);return B(f,i)}function $(b){function f(D){if(D>r){if(j&&j!==q){n.push(\"</span>\");j=null}if(!j&&q){j=q;n.push('<span class=\"',j,'\">')}var T=y(p(i.substring(r,D))).replace(e?d:c,\"$1&#160;\");e=k.test(T);n.push(T.replace(a,s));r=D}}var i=b.source,o=b.g,l=b.d,n=[],r=0,j=null,q=null,m=0,t=0,p=Y(window.PR_TAB_WIDTH),c=/([\\r\\n ]) /g,\nd=/(^| ) /gm,a=/\\r\\n?|\\n/g,k=/[ \\r\\n]$/,e=true,h=window._pr_isIE6();h=h?b.b.tagName===\"PRE\"?h===6?\"&#160;\\r\\n\":h===7?\"&#160;<br>\\r\":\"&#160;\\r\":\"&#160;<br />\":\"<br />\";var g=b.b.className.match(/\\blinenums\\b(?::(\\d+))?/),s;if(g){for(var v=[],w=0;w<10;++w)v[w]=h+'</li><li class=\"L'+w+'\">';var F=g[1]&&g[1].length?g[1]-1:0;n.push('<ol class=\"linenums\"><li class=\"L',F%10,'\"');F&&n.push(' value=\"',F+1,'\"');n.push(\">\");s=function(){var D=v[++F%10];return j?\"</span>\"+D+'<span class=\"'+j+'\">':D}}else s=h;\nfor(;;)if(m<o.length?t<l.length?o[m]<=l[t]:true:false){f(o[m]);if(j){n.push(\"</span>\");j=null}n.push(o[m+1]);m+=2}else if(t<l.length){f(l[t]);q=l[t+1];t+=2}else break;f(i.length);j&&n.push(\"</span>\");g&&n.push(\"</li></ol>\");b.a=n.join(\"\")}function u(b,f){for(var i=f.length;--i>=0;){var o=f[i];if(G.hasOwnProperty(o))\"console\"in window&&console.warn(\"cannot override language handler %s\",o);else G[o]=b}}function Q(b,f){b&&G.hasOwnProperty(b)||(b=/^\\s*</.test(f)?\"default-markup\":\"default-code\");return G[b]}\nfunction U(b){var f=b.f,i=b.e;b.a=f;try{var o,l=f.match(aa);f=[];var n=0,r=[];if(l)for(var j=0,q=l.length;j<q;++j){var m=l[j];if(m.length>1&&m.charAt(0)===\"<\"){if(!ba.test(m))if(ca.test(m)){f.push(m.substring(9,m.length-3));n+=m.length-12}else if(da.test(m)){f.push(\"\\n\");++n}else if(m.indexOf(V)>=0&&m.replace(/\\s(\\w+)\\s*=\\s*(?:\\\"([^\\\"]*)\\\"|'([^\\']*)'|(\\S+))/g,' $1=\"$2$3$4\"').match(/[cC][lL][aA][sS][sS]=\\\"[^\\\"]*\\bnocode\\b/)){var t=m.match(W)[2],p=1,c;c=j+1;a:for(;c<q;++c){var d=l[c].match(W);if(d&&\nd[2]===t)if(d[1]===\"/\"){if(--p===0)break a}else++p}if(c<q){r.push(n,l.slice(j,c+1).join(\"\"));j=c}else r.push(n,m)}else r.push(n,m)}else{var a;p=m;var k=p.indexOf(\"&\");if(k<0)a=p;else{for(--k;(k=p.indexOf(\"&#\",k+1))>=0;){var e=p.indexOf(\";\",k);if(e>=0){var h=p.substring(k+3,e),g=10;if(h&&h.charAt(0)===\"x\"){h=h.substring(1);g=16}var s=parseInt(h,g);isNaN(s)||(p=p.substring(0,k)+String.fromCharCode(s)+p.substring(e+1))}}a=p.replace(ea,\"<\").replace(fa,\">\").replace(ga,\"'\").replace(ha,'\"').replace(ia,\" \").replace(ja,\n\"&\")}f.push(a);n+=a.length}}o={source:f.join(\"\"),h:r};var v=o.source;b.source=v;b.c=0;b.g=o.h;Q(i,v)(b);$(b)}catch(w){if(\"console\"in window)console.log(w&&w.stack?w.stack:w)}}var A=\"str\",R=\"kwd\",C=\"com\",S=\"typ\",J=\"lit\",E=\"pun\",z=\"pln\",P=\"src\",V=\"nocode\",Z=function(){for(var b=[\"!\",\"!=\",\"!==\",\"#\",\"%\",\"%=\",\"&\",\"&&\",\"&&=\",\"&=\",\"(\",\"*\",\"*=\",\"+=\",\",\",\"-=\",\"->\",\"/\",\"/=\",\":\",\"::\",\";\",\"<\",\"<<\",\"<<=\",\"<=\",\"=\",\"==\",\"===\",\">\",\">=\",\">>\",\">>=\",\">>>\",\">>>=\",\"?\",\"@\",\"[\",\"^\",\"^=\",\"^^\",\"^^=\",\"{\",\"|\",\"|=\",\"||\",\"||=\",\n\"~\",\"break\",\"case\",\"continue\",\"delete\",\"do\",\"else\",\"finally\",\"instanceof\",\"return\",\"throw\",\"try\",\"typeof\"],f=\"(?:^^|[+-]\",i=0;i<b.length;++i)f+=\"|\"+b[i].replace(/([^=<>:&a-z])/g,\"\\\\$1\");f+=\")\\\\s*\";return f}(),L=/&/g,M=/</g,N=/>/g,X=/\\\"/g,ea=/&lt;/g,fa=/&gt;/g,ga=/&apos;/g,ha=/&quot;/g,ja=/&amp;/g,ia=/&nbsp;/g,ka=/[\\r\\n]/g,K=null,aa=RegExp(\"[^<]+|<!--[\\\\s\\\\S]*?--\\>|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>|</?[a-zA-Z](?:[^>\\\"']|'[^']*'|\\\"[^\\\"]*\\\")*>|<\",\"g\"),ba=/^<\\!--/,ca=/^<!\\[CDATA\\[/,da=/^<br\\b/i,W=/^<(\\/?)([a-zA-Z][a-zA-Z0-9]*)/,\nla=x({keywords:\"break continue do else for if return while auto case char const default double enum extern float goto int long register short signed sizeof static struct switch typedef union unsigned void volatile catch class delete false import new operator private protected public this throw true try typeof alignof align_union asm axiom bool concept concept_map const_cast constexpr decltype dynamic_cast explicit export friend inline late_check mutable namespace nullptr reinterpret_cast static_assert static_cast template typeid typename using virtual wchar_t where break continue do else for if return while auto case char const default double enum extern float goto int long register short signed sizeof static struct switch typedef union unsigned void volatile catch class delete false import new operator private protected public this throw true try typeof abstract boolean byte extends final finally implements import instanceof null native package strictfp super synchronized throws transient as base by checked decimal delegate descending event fixed foreach from group implicit in interface internal into is lock object out override orderby params partial readonly ref sbyte sealed stackalloc string select uint ulong unchecked unsafe ushort var break continue do else for if return while auto case char const default double enum extern float goto int long register short signed sizeof static struct switch typedef union unsigned void volatile catch class delete false import new operator private protected public this throw true try typeof debugger eval export function get null set undefined var with Infinity NaN caller delete die do dump elsif eval exit foreach for goto if import last local my next no our print package redo require sub undef unless until use wantarray while BEGIN END break continue do else for if return while and as assert class def del elif except exec finally from global import in is lambda nonlocal not or pass print raise try with yield False True None break continue do else for if return while alias and begin case class def defined elsif end ensure false in module next nil not or redo rescue retry self super then true undef unless until when yield BEGIN END break continue do else for if return while case done elif esac eval fi function in local set then until \",\nhashComments:true,cStyleComments:true,multiLineStrings:true,regexLiterals:true}),G={};u(la,[\"default-code\"]);u(B([],[[z,/^[^<?]+/],[\"dec\",/^<!\\w[^>]*(?:>|$)/],[C,/^<\\!--[\\s\\S]*?(?:-\\->|$)/],[\"lang-\",/^<\\?([\\s\\S]+?)(?:\\?>|$)/],[\"lang-\",/^<%([\\s\\S]+?)(?:%>|$)/],[E,/^(?:<[%?]|[%?]>)/],[\"lang-\",/^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],[\"lang-js\",/^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],[\"lang-css\",/^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],[\"lang-in.tag\",/^(<\\/?[a-z][^<>]*>)/i]]),[\"default-markup\",\n\"htm\",\"html\",\"mxml\",\"xhtml\",\"xml\",\"xsl\"]);u(B([[z,/^[\\s]+/,null,\" \\t\\r\\n\"],[\"atv\",/^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/,null,\"\\\"'\"]],[[\"tag\",/^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],[\"atn\",/^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],[\"lang-uq.val\",/^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],[E,/^[=<>\\/]+/],[\"lang-js\",/^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-js\",/^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],[\"lang-js\",/^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],[\"lang-css\",/^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],[\"lang-css\",/^style\\s*=\\s*\\'([^\\']+)\\'/i],\n[\"lang-css\",/^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]]),[\"in.tag\"]);u(B([],[[\"atv\",/^[\\s\\S]+/]]),[\"uq.val\"]);u(x({keywords:\"break continue do else for if return while auto case char const default double enum extern float goto int long register short signed sizeof static struct switch typedef union unsigned void volatile catch class delete false import new operator private protected public this throw true try typeof alignof align_union asm axiom bool concept concept_map const_cast constexpr decltype dynamic_cast explicit export friend inline late_check mutable namespace nullptr reinterpret_cast static_assert static_cast template typeid typename using virtual wchar_t where \",\nhashComments:true,cStyleComments:true}),[\"c\",\"cc\",\"cpp\",\"cxx\",\"cyc\",\"m\"]);u(x({keywords:\"null true false\"}),[\"json\"]);u(x({keywords:\"break continue do else for if return while auto case char const default double enum extern float goto int long register short signed sizeof static struct switch typedef union unsigned void volatile catch class delete false import new operator private protected public this throw true try typeof abstract boolean byte extends final finally implements import instanceof null native package strictfp super synchronized throws transient as base by checked decimal delegate descending event fixed foreach from group implicit in interface internal into is lock object out override orderby params partial readonly ref sbyte sealed stackalloc string select uint ulong unchecked unsafe ushort var \",\nhashComments:true,cStyleComments:true,verbatimStrings:true}),[\"cs\"]);u(x({keywords:\"break continue do else for if return while auto case char const default double enum extern float goto int long register short signed sizeof static struct switch typedef union unsigned void volatile catch class delete false import new operator private protected public this throw true try typeof abstract boolean byte extends final finally implements import instanceof null native package strictfp super synchronized throws transient \",\ncStyleComments:true}),[\"java\"]);u(x({keywords:\"break continue do else for if return while case done elif esac eval fi function in local set then until \",hashComments:true,multiLineStrings:true}),[\"bsh\",\"csh\",\"sh\"]);u(x({keywords:\"break continue do else for if return while and as assert class def del elif except exec finally from global import in is lambda nonlocal not or pass print raise try with yield False True None \",hashComments:true,multiLineStrings:true,tripleQuotedStrings:true}),[\"cv\",\"py\"]);\nu(x({keywords:\"caller delete die do dump elsif eval exit foreach for goto if import last local my next no our print package redo require sub undef unless until use wantarray while BEGIN END \",hashComments:true,multiLineStrings:true,regexLiterals:true}),[\"perl\",\"pl\",\"pm\"]);u(x({keywords:\"break continue do else for if return while alias and begin case class def defined elsif end ensure false in module next nil not or redo rescue retry self super then true undef unless until when yield BEGIN END \",hashComments:true,\nmultiLineStrings:true,regexLiterals:true}),[\"rb\"]);u(x({keywords:\"break continue do else for if return while auto case char const default double enum extern float goto int long register short signed sizeof static struct switch typedef union unsigned void volatile catch class delete false import new operator private protected public this throw true try typeof debugger eval export function get null set undefined var with Infinity NaN \",cStyleComments:true,regexLiterals:true}),[\"js\"]);u(B([],[[A,/^[\\s\\S]+/]]),\n[\"regex\"]);window.PR_normalizedHtml=H;window.prettyPrintOne=function(b,f){var i={f:b,e:f};U(i);return i.a};window.prettyPrint=function(b){function f(){for(var t=window.PR_SHOULD_USE_CONTINUATION?j.now()+250:Infinity;q<o.length&&j.now()<t;q++){var p=o[q];if(p.className&&p.className.indexOf(\"prettyprint\")>=0){var c=p.className.match(/\\blang-(\\w+)\\b/);if(c)c=c[1];for(var d=false,a=p.parentNode;a;a=a.parentNode)if((a.tagName===\"pre\"||a.tagName===\"code\"||a.tagName===\"xmp\")&&a.className&&a.className.indexOf(\"prettyprint\")>=\n0){d=true;break}if(!d){a=p;if(null===K){d=document.createElement(\"PRE\");d.appendChild(document.createTextNode('<!DOCTYPE foo PUBLIC \"foo bar\">\\n<foo />'));K=!/</.test(d.innerHTML)}if(K){d=a.innerHTML;if(\"XMP\"===a.tagName)d=y(d);else{a=a;if(\"PRE\"===a.tagName)a=true;else if(ka.test(d)){var k=\"\";if(a.currentStyle)k=a.currentStyle.whiteSpace;else if(window.getComputedStyle)k=window.getComputedStyle(a,null).whiteSpace;a=!k||k===\"pre\"}else a=true;a||(d=d.replace(/(<br\\s*\\/?>)[\\r\\n]+/g,\"$1\").replace(/(?:[\\r\\n]+[ \\t]*)+/g,\n\" \"))}d=d}else{d=[];for(a=a.firstChild;a;a=a.nextSibling)H(a,d);d=d.join(\"\")}d=d.replace(/(?:\\r\\n?|\\n)$/,\"\");m={f:d,e:c,b:p};U(m);if(p=m.a){c=m.b;if(\"XMP\"===c.tagName){d=document.createElement(\"PRE\");for(a=0;a<c.attributes.length;++a){k=c.attributes[a];if(k.specified)if(k.name.toLowerCase()===\"class\")d.className=k.value;else d.setAttribute(k.name,k.value)}d.innerHTML=p;c.parentNode.replaceChild(d,c)}else c.innerHTML=p}}}}if(q<o.length)setTimeout(f,250);else b&&b()}for(var i=[document.getElementsByTagName(\"pre\"),\ndocument.getElementsByTagName(\"code\"),document.getElementsByTagName(\"xmp\")],o=[],l=0;l<i.length;++l)for(var n=0,r=i[l].length;n<r;++n)o.push(i[l][n]);i=null;var j=Date;j.now||(j={now:function(){return(new Date).getTime()}});var q=0,m;f()};window.PR={combinePrefixPatterns:O,createSimpleLexer:B,registerLangHandler:u,sourceDecorator:x,PR_ATTRIB_NAME:\"atn\",PR_ATTRIB_VALUE:\"atv\",PR_COMMENT:C,PR_DECLARATION:\"dec\",PR_KEYWORD:R,PR_LITERAL:J,PR_NOCODE:V,PR_PLAIN:z,PR_PUNCTUATION:E,PR_SOURCE:P,PR_STRING:A,\nPR_TAG:\"tag\",PR_TYPE:S}})()","/home/travis/build/npmtest/node-npmtest-iodocs/node_modules/iodocs/public/javascripts/utilities.js":"// make it safe to use console.log always\n(function(b){function c(){}for(var d=\"assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,time,timeEnd,trace,warn\".split(\",\"),a;a=d.pop();)b[a]=b[a]||c})(window.console=window.console||{});\n\nfunction spaces(len) {\n    var s = '',\n    indent = len * 4;\n\n    for (var i = 0; i < indent;i++) {\n        s += \" \";\n    }\n\n    return s;\n}\n\nfunction formatXML(str) {\n    var xml = '';\n\n    // add newlines\n    str = str.replace(/(>)(<)(\\/*)/g,\"$1\\r$2$3\");\n\n    // add indents\n    var pad = 0,\n        indent,\n        node;\n\n    // split the string\n    var strArr = str.split(\"\\r\");\n\n    // check the various tag states\n    for (var i = 0, len = strArr.length; i < len; i++) {\n        indent = 0;\n        node = strArr[i];\n\n        if (node.match(/.+<\\/\\w[^>]*>$/)) { //open and closing in the same line\n            indent = 0;\n        } else if (node.match(/^<\\/\\w/) && pad > 0) { // closing tag\n            pad -= 1;\n        } else if (node.match(/^<\\w[^>]*[^\\/]>.*$/)) { //opening tag\n            indent = 1;\n        } else {\n            indent = 0;\n        }\n\n        xml += spaces(pad) + node + \"\\r\";\n        pad += indent;\n    }\n\n    return xml;\n\n}\n\nfunction formatJSON(jsonString) {\n    return JSON.stringify(jsonString, null, '    ');\n}\n\n// Cause the browser to \"select\" all the text in an element\nfunction selectElementText(el, win) {\n    el.focus();\n    win = win || window;\n    var doc = win.document, sel, range;\n    if (win.getSelection && doc.createRange) {\n        sel = win.getSelection();\n        range = doc.createRange();\n        range.selectNodeContents(el);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    } else if (doc.body.createTextRange) {\n        range = doc.body.createTextRange();\n        range.moveToElementText(el);\n        range.select();\n    }\n}"}